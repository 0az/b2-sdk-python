2.
doc\source\quick_start.rst, lines 30-33:
"""
    >>> application_key_id = '4a5b6c7d8e9f'  # get credentials from from B2 website
    >>> application_key = '001b8e23c26ff6efb941e237deb182b9599a84bef7'
    >>> b2_api.authorize_account("production", application_key_id, application_key)
"""
Does the
# get credentials from from B2 website
pertain to application_key_id only or to all of them? If to more than appplication_key_id, consider pushing it out to a separate line (i.e.:
"""
    >>> # get credentials from from B2 website
    >>> application_key_id = '4a5b6c7d8e9f'
    >>> application_key = '001b8e23c26ff6efb941e237deb182b9599a84bef7'
    >>> b2_api.authorize_account("production", application_key_id, application_key)
"""
)


3.
b2sdk\account_info\sqlite_account_info.py, lines 104-105:
"""
        # Remove the corrupted file and create a new database
        raise CorruptAccountInfo(self.filename)
"""
Is removing corrupted (_how badly_?) corrupted databases a regular
practice? I would opt for a raise exception, creation of a new one
and running some internal or external tool to see if it could be
recovered, instead of deleting it wholesale.


4.
I cannot find these in code, but some of the elements of .. toctree:: in doc\source\api_reference.rst - lines 44-66 - do not have any titles (the fact that some of the others have them non-descriptive or non-helpful is another matter entirely).
    api/internal/utils                      - b2sdk.utils
    api/internal/cache                      - b2sdk.cache
    api/internal/sync/action                - b2sdk.sync.action
    api/internal/sync/exception             - b2sdk.sync.exception
    api/internal/sync/file                  - b2sdk.sync.file
    api/internal/sync/folder                - b2sdk.sync.folder
    api/internal/sync/folder_parser         - b2sdk.sync.folder_parser
    api/internal/sync/policy                - b2sdk.sync.policy
    api/internal/sync/policy_manager        - b2sdk.sync.policy_manager
    api/internal/sync/scan_policies         - b2sdk.sync.scan_policies
    api/internal/sync/sync                  - b2sdk.sync.sync
    api/internal/transferer/file_metadata   - b2sdk.transferer.file_metadata
    api/internal/upload_source              - b2sdk.upload_source


5.
Dicts get squashed and much less convenient to read/copy from. E.g.:
b2sdk\account_info\abstract.py, lines 33-37:
"""
    REALM_URLS = {
        'production': 'https://api.backblazeb2.com',
        'dev': 'http://api.backblazeb2.xyz:8180',
        'staging': 'https://api.backblaze.net',
    }
"""

while in the docs it looks like this:
"""
REALM_URLS = {'dev': 'http://api.backblazeb2.xyz:8180', 'production': 'https://api.backblazeb2.com', 'staging':
'https://api.backblaze.net'}
"""


6.
https://b2-sdk-python.readthedocs.io/en/master/api/account_info.html#b2sdk.v1.AbstractAccountInfo._abc_impl
... what is this, exactly?


7.
Bulleted lists get squashed and their readability and usefulness is lost. E.g.:
b2sdk\api.py, lines 55-58:
"""
    - re-acquires authorization tokens when they expire
    - retrying uploads when an upload URL is busy
    - breaking large files into parts
    - emulating a directory structure (B2 buckets are flat)
"""
at
    https://b2-sdk-python.readthedocs.io/en/master/api/api.html#b2-api-client
are displayed as
"""
                                    - re-acquires authorization tokens
 when they expire - retrying uploads when an upload URL is busy - breaking large files into parts
 - emulating a directory structure (B2 buckets are flat)
"""


#The same for:
#b2sdk\b2http.py, lines 233-235  # I haven't encountered it as displayed in docs yet, but I provide it in this list so if a fix requires formatting, a pointer to it will survive
